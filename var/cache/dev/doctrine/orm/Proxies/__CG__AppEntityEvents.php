<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Events extends \App\Entity\Events implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'eventname', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'nbrmaxpart', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'imageevent', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'eventdate', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'eventaddress', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'eventtheme', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'file', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'org', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'nbrGoing', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'nbrLikes', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'nbrDislikes'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'eventname', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'nbrmaxpart', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'imageevent', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'eventdate', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'eventaddress', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'eventtheme', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'file', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'org', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'nbrGoing', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'nbrLikes', '' . "\0" . 'App\\Entity\\Events' . "\0" . 'nbrDislikes'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Events $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEventname(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventname', []);

        return parent::getEventname();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventname(string $eventname): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventname', [$eventname]);

        return parent::setEventname($eventname);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrmaxpart(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrmaxpart', []);

        return parent::getNbrmaxpart();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbrmaxpart(int $nbrmaxpart): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbrmaxpart', [$nbrmaxpart]);

        return parent::setNbrmaxpart($nbrmaxpart);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageevent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageevent', []);

        return parent::getImageevent();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageevent($imageevent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageevent', [$imageevent]);

        return parent::setImageevent($imageevent);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventdate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventdate', []);

        return parent::getEventdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventdate(\DateTimeInterface $eventdate): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventdate', [$eventdate]);

        return parent::setEventdate($eventdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventaddress(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventaddress', []);

        return parent::getEventaddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventaddress(?string $eventaddress): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventaddress', [$eventaddress]);

        return parent::setEventaddress($eventaddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventtheme(): ?\App\Entity\Themes
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventtheme', []);

        return parent::getEventtheme();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventtheme(?\App\Entity\Themes $eventtheme): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventtheme', [$eventtheme]);

        return parent::setEventtheme($eventtheme);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrg(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrg', []);

        return parent::getOrg();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrg(?\App\Entity\User $org): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrg', [$org]);

        return parent::setOrg($org);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrGoing(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrGoing', []);

        return parent::getNbrGoing();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbrGoing(?int $nbrGoing): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbrGoing', [$nbrGoing]);

        return parent::setNbrGoing($nbrGoing);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrLikes(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrLikes', []);

        return parent::getNbrLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbrLikes(?int $nbrLikes): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbrLikes', [$nbrLikes]);

        return parent::setNbrLikes($nbrLikes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrDislikes(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrDislikes', []);

        return parent::getNbrDislikes();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbrDislikes(?int $nbrDislikes): \App\Entity\Events
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbrDislikes', [$nbrDislikes]);

        return parent::setNbrDislikes($nbrDislikes);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
