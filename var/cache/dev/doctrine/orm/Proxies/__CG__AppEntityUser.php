<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nomUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prenomUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateNaiss', '' . "\0" . 'App\\Entity\\User' . "\0" . 'emailUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'loginUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'mdpUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'numUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'events'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nomUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prenomUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateNaiss', '' . "\0" . 'App\\Entity\\User' . "\0" . 'emailUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'loginUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'mdpUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'numUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'events'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomUser', []);

        return parent::getNomUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomUser(string $nomUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomUser', [$nomUser]);

        return parent::setNomUser($nomUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenomUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenomUser', []);

        return parent::getPrenomUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenomUser(string $prenomUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenomUser', [$prenomUser]);

        return parent::setPrenomUser($prenomUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateNaiss(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateNaiss', []);

        return parent::getDateNaiss();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateNaiss(\DateTimeInterface $dateNaiss): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateNaiss', [$dateNaiss]);

        return parent::setDateNaiss($dateNaiss);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailUser', []);

        return parent::getEmailUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailUser(string $emailUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailUser', [$emailUser]);

        return parent::setEmailUser($emailUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoginUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLoginUser', []);

        return parent::getLoginUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setLoginUser(string $loginUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLoginUser', [$loginUser]);

        return parent::setLoginUser($loginUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getMdpUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMdpUser', []);

        return parent::getMdpUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setMdpUser(string $mdpUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMdpUser', [$mdpUser]);

        return parent::setMdpUser($mdpUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumUser(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumUser', []);

        return parent::getNumUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumUser(int $numUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumUser', [$numUser]);

        return parent::setNumUser($numUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageUser', []);

        return parent::getImageUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageUser(string $imageUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageUser', [$imageUser]);

        return parent::setImageUser($imageUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvents(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvents', []);

        return parent::getEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvent(\App\Entity\Events $event): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvent', [$event]);

        return parent::addEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEvent(\App\Entity\Events $event): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEvent', [$event]);

        return parent::removeEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
